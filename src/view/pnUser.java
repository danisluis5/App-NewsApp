/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bean.User;
import controller.ControllerUser;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableRowSorter;
import library.ValidateDB;

/**
 *
 * @author LINNGUYEN
 */
public class pnUser extends javax.swing.JPanel {

    /**
     * Creates new form pnNews
     */
    private ControllerUser controller; 
    
    public pnUser(){
        initComponents();
        controller = new ControllerUser(tbMain);
        controller.loadTable();
        tfPass.setEchoChar('•');
        this.tfId.setEditable(false);
    }
    
    public pnUser(User objUser) {
        initComponents();
        controller = new ControllerUser(tbMain,objUser);
        controller.loadTable();
        tfPass.setEchoChar('•');
        this.tfId.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfIdF = new javax.swing.JTextField();
        tfUsernameF = new javax.swing.JTextField();
        tfFullnameF = new javax.swing.JTextField();
        cbActiveF = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        btTimKiem = new javax.swing.JButton();
        btActive = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        tfUser = new javax.swing.JTextField();
        cbActive = new javax.swing.JCheckBox();
        tfFull = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnNhapLai = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        tfPass = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbMain = new javax.swing.JTable();

        setBackground(new java.awt.Color(242, 242, 242));
        setPreferredSize(new java.awt.Dimension(919, 580));
        setLayout(new java.awt.BorderLayout());

        jPanel5.setBackground(new java.awt.Color(242, 242, 242));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setOneTouchExpandable(true);

        jPanel1.setBackground(new java.awt.Color(242, 242, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Form Chức Năng", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 16), new java.awt.Color(0, 67, 74)), null)); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(447, 565));

        jPanel8.setBackground(new java.awt.Color(242, 242, 242));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel4.setText("ID:");

        jLabel5.setText("Tên đăng nhập:");

        jLabel7.setText("Họ và tên:");

        cbActiveF.setText("Kích hoạt");
        cbActiveF.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jPanel9.setBackground(new java.awt.Color(242, 242, 242));

        btTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search-icon.png"))); // NOI18N
        btTimKiem.setText("Tìm kiếm");
        btTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTimKiemActionPerformed(evt);
            }
        });
        jPanel9.add(btTimKiem);

        btActive.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btActive.setForeground(java.awt.Color.green);
        btActive.setText("v");
        btActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActiveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(tfIdF, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(tfUsernameF)
                    .addComponent(tfFullnameF)))
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(cbActiveF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btActive))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfIdF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfUsernameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfFullnameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbActiveF)
                    .addComponent(btActive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jLabel1.setText("ID người dùng:");

        jLabel2.setText("Tên đăng nhập:");

        jLabel3.setText("Mật khẩu:");

        jLabel9.setText("Họ và tên:");

        cbActive.setText("Kích hoạt");
        cbActive.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jPanel3.setBackground(new java.awt.Color(242, 242, 242));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-icon.gif"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel3.add(btnThem);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit-icon.gif"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel3.add(btnSua);

        btnNhapLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.gif"))); // NOI18N
        btnNhapLai.setText("Nhập lại");
        btnNhapLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiActionPerformed(evt);
            }
        });
        jPanel3.add(btnNhapLai);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/del.gif"))); // NOI18N
        btnXoa.setText("xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoa);

        tfPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfUser))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbActive))
                    .addComponent(tfFull)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfPass, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbActive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfFull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(99, 99, 99)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));
        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Danh Sách", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 16), new java.awt.Color(0, 67, 74)), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(465, 530));
        jPanel2.setLayout(new java.awt.BorderLayout(5, 5));

        jPanel4.setBackground(new java.awt.Color(242, 242, 242));
        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel4.setLayout(new java.awt.BorderLayout());

        tbMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbMainMousePressed(evt);
            }
        });
        tbMain.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbMainKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tbMain);

        jPanel4.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel2);

        jPanel5.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        add(jPanel5, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        int row = tbMain.getSelectedRow();
        String password = tfPass.getPassword().toString();
        String username = tfUser.getText();
        String fullname = tfFull.getText();
        boolean active = cbActive.isSelected();
        User objUser = new User(0, username,password, fullname, active);
        if(isValid(objUser, "add")){
            if(!new ValidateDB().user_exist(objUser.getUsername())){
                int result = controller.addItem(objUser,row);
                if(result > 0){
                    this.resetForm();
                    JOptionPane.showConfirmDialog(new pnUser(), "Thêm thành công","Thông báo",JOptionPane.WARNING_MESSAGE);
                }else{
                    JOptionPane.showConfirmDialog(new pnUser(), "Thêm thất bại","Thông báo",JOptionPane.WARNING_MESSAGE);
                }
            }else{
                JOptionPane.showConfirmDialog(new pnUser(), "Tên đăng nhập đã trùng trong hệ thống","Thông báo",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int row = tbMain.getSelectedRow();
        int id_user = Integer.parseInt(tfId.getText());
        String username = tfUser.getText();
        String fullname = tfFull.getText();
        String password = tfPass.getPassword().toString();
        boolean active = cbActive.isSelected();
        User objUser = new User(id_user, username,password, fullname, active);
        if(isValid(objUser, "edit")){
            if(!new ValidateDB().user_exist(username, id_user)){
                int result = controller.editItem(objUser,row);
                if(result > 0){
                    this.resetForm();
                    JOptionPane.showConfirmDialog(new pnUser(), "Cập nhật thành công","Thông báo",JOptionPane.WARNING_MESSAGE);
                }else{
                    JOptionPane.showConfirmDialog(new pnUser(), "Cập nhật thất bại","Thông báo",JOptionPane.WARNING_MESSAGE);
                }
            }else{
                JOptionPane.showConfirmDialog(new pnUser(), "Tên đăng nhập bị trùng trong hệ thống","Thông báo",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnNhapLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiActionPerformed
        this.resetForm();
    }//GEN-LAST:event_btnNhapLaiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int row = tbMain.getSelectedRow();
        int id_user = 0;
        if(tfId.getText().isEmpty()){
            id_user = 0;
        }else{
            id_user = Integer.parseInt(tfId.getText());
        }
        // JOptionPane.showMessageDialog(null, id_user);
        String username = tfUser.getText();
        String fullname = tfFull.getText();
        boolean active = cbActive.isSelected();
        User objUser = new User(id_user,username,"",fullname,active);
        if(isValid(objUser, "del")){
            int result = controller.deleteItem(objUser,row);
            if(result > 0){
                this.resetForm();
                JOptionPane.showConfirmDialog(new pnUser(), "Xóa thành công","Thông báo",JOptionPane.WARNING_MESSAGE);
            }else{
                JOptionPane.showConfirmDialog(new pnUser(), "Xóa thất bại","Thông báo",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMainMousePressed
        this.setForm();
    }//GEN-LAST:event_tbMainMousePressed

    private void tbMainKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbMainKeyReleased
        this.setForm();
    }//GEN-LAST:event_tbMainKeyReleased

    private void btActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActiveActionPerformed
        if("v".equals(btActive.getText())){
            btActive.setText("x");
            btActive.setForeground(Color.RED);
            cbActiveF.setEnabled(false);
        }else{            
            btActive.setText("v");
            cbActiveF.setEnabled(true);
            btActive.setForeground(Color.GREEN);
        }
    }//GEN-LAST:event_btActiveActionPerformed

    private void btTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimKiemActionPerformed
        TableRowSorter sorter = new TableRowSorter(tbMain.getModel());
        tbMain.setRowSorter(sorter);
        
        ArrayList<RowFilter<AbstractTableModel,Object>> alFilter = new ArrayList<>();
        
        String uid = tfIdF.getText();
        RowFilter<AbstractTableModel,Object> filterId = RowFilter.regexFilter(uid, 0);
        
        String username = tfUsernameF.getText();
        RowFilter<AbstractTableModel,Object> filterUser = RowFilter.regexFilter(username, 1);
        
        String password = tfFullnameF.getText();
        RowFilter<AbstractTableModel,Object> filterFull = RowFilter.regexFilter(password, 2);
        
        if(cbActiveF.isEnabled()){
            Boolean active = cbActiveF.isSelected();
            RowFilter<AbstractTableModel,Object> filterActive = new RowFilter<AbstractTableModel, Object>() {
            @Override
            public boolean include(RowFilter.Entry<? extends AbstractTableModel, ? extends Object> entry) {
                    /** Đi sâu vào RowFilter **/
                    if(active==(boolean)entry.getValue(3)){
                        return true;
                    }
                    return false; 
                }
            };
            alFilter.add(filterActive);
        }
        alFilter.add(filterId);
        alFilter.add(filterUser);
        alFilter.add(filterFull);
        RowFilter<AbstractTableModel,Object> filterAnd = RowFilter.andFilter(alFilter);
        sorter.setRowFilter(filterAnd);
    }//GEN-LAST:event_btTimKiemActionPerformed

    private void tfPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPassActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActive;
    private javax.swing.JButton btTimKiem;
    private javax.swing.JButton btnNhapLai;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JCheckBox cbActive;
    private javax.swing.JCheckBox cbActiveF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable tbMain;
    private javax.swing.JTextField tfFull;
    private javax.swing.JTextField tfFullnameF;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfIdF;
    private javax.swing.JPasswordField tfPass;
    private javax.swing.JTextField tfUser;
    private javax.swing.JTextField tfUsernameF;
    // End of variables declaration//GEN-END:variables

    private void setForm() {
        int row = tbMain.getSelectedRow();
        String id = tbMain.getValueAt(row, 0).toString();
        String username = tbMain.getValueAt(row, 1).toString();
        String fullname = tbMain.getValueAt(row, 2).toString();
        boolean active = (boolean) tbMain.getValueAt(row, 3);
        tfId.setText(id);
        tfUser.setText(username);
        tfFull.setText(fullname);
        cbActive.setSelected(active);
    }
    private void resetForm(){
        tfId.setText("");
        tfUser.setText("");
        tfPass.setText("");
        tfFull.setText("");
        cbActive.setSelected(false);
        tfUser.requestFocus();
    }
    private boolean isValid(User objUser,String function) {
        boolean result = true;
        switch(function){
            case "add":
                if(objUser.getUsername().isEmpty()){
                    JOptionPane.showConfirmDialog(new pnUser(), "Chưa nhập tên đăng nhập","Thông báo",JOptionPane.WARNING_MESSAGE);
                    result = false;
                }
                if(result){
                    if(objUser.getPassword().isEmpty()){
                        JOptionPane.showConfirmDialog(new pnUser(), "Chưa nhập mật khẩu","Thông báo",JOptionPane.WARNING_MESSAGE);
                        result = false;
                    }
                }
                break;
            case "edit":
                if(objUser.getUsername().isEmpty()){
                    JOptionPane.showConfirmDialog(new pnUser(), "Tên đăng nhập không bỏ trống","Thông báo",JOptionPane.WARNING_MESSAGE);
                    result = false;
                }
                break;
            case "del":
                if(objUser.getId()<0){
                    JOptionPane.showConfirmDialog(new pnUser(), "Chưa chọn dòng để xóa","Thông báo",JOptionPane.WARNING_MESSAGE);
                    result = false;
                }
                break;
        }
        return result;
    }
}
